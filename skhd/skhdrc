

# opens iTerm2
alt - return : "${HOME}"/.dotfiles/scripts/utils/open_iterm2


# focus window
alt - h : yabai -m window --focus west
alt - t : yabai -m window --focus south
alt - n : yabai -m window --focus north
alt - s : yabai -m window --focus east

# swap managed window
# shift + alt - h : yabai -m window --swap north

# move managed window
shift + alt - h : yabai -m window --warp west
shift + alt - t : yabai -m window --warp south
shift + alt - n : yabai -m window --warp north
shift + alt - s : yabai -m window --warp east

# Move focus container to workspace
shift + alt - 1 : yabai -m window --space 1; yabai -m space --focus 1
shift + alt - 2 : yabai -m window --space 2; yabai -m space --focus 2
shift + alt - 3 : yabai -m window --space 3; yabai -m space --focus 3
shift + alt - 4 : yabai -m window --space 4; yabai -m space --focus 4
shift + alt - 5 : yabai -m window --space 5; yabai -m space --focus 5
shift + alt - 6 : yabai -m window --space 6; yabai -m space --focus 6
shift + alt - 7 : yabai -m window --space 7; yabai -m space --focus 7
shift + alt - 8 : yabai -m window --space 8; yabai -m space --focus 8
shift + alt - 9 : yabai -m window --space 9; yabai -m space --focus 9



# balance size of windows
shift + alt - 0 : yabai -m space --balance

# make floating window fill screen
shift + alt - up     : yabai -m window --grid 1:1:0:0:1:1

# make floating window fill left-half of screen
shift + alt - left   : yabai -m window --grid 1:2:0:0:1:1

# create desktop, move window and follow focus - uses jq for parsing json (brew install jq)
 shift + cmd - n : yabai -m space --create && \
                   index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
                   yabai -m window --space "${index}" && \
                   yabai -m space --focus "${index}"

# fast focus desktop
alt - x : yabai -m space --focus recent
alt  - 1 : yabai -m space --focus 1
alt  - 2 : yabai -m space --focus 2
alt  - 3 : yabai -m space --focus 3
alt  - 4 : yabai -m space --focus 4
alt  - 5 : yabai -m space --focus 5
alt  - 6 : yabai -m space --focus 6
alt  - 7 : yabai -m space --focus 7
alt  - 8 : yabai -m space --focus 8
alt  - 9 : yabai -m space --focus 9


# focus monitor
 ctrl + alt - z  : yabai -m display --focus prev
 ctrl + alt - 3  : yabai -m display --focus 3

# send window to monitor and follow focus
 ctrl + cmd - c  : yabai -m window --display next; yabai -m display --focus next
 ctrl + cmd - 1  : yabai -m window --display 1; yabai -m display --focus 1

# move floating window
 shift + ctrl - a : yabai -m window --move rel:-20:0
 shift + ctrl - s : yabai -m window --move rel:0:20


:: resize  @ : yabai border::color 0xff00ff75
alt - p ; resize
resize < return ; default
resize < h : yabai -m window --resize left:-20:0 ; yabai -m window --resize right:-20:0
resize < t : yabai -m window --resize bottom:0:20 ; yabai -m window --resize top:0:20
resize < n : yabai -m window --resize top:0:-20 ; yabai -m window --resize bottom:0:-20
resize < s : yabai -m window --resize right:20:0 ; yabai -m window --resize left:20:0
# set insertion point in focused container
:: launch @ : yabai border::color 0xff0000ff
alt - l ; launch
launch < return ; default
launch < g : "${HOME}"/.dotfiles/scripts/utils/open_chrome; skhd -k "return"
launch < f : "${HOME}"/.dotfiles/scripts/utils/open_firefox; skhd -k "return"



# toggle window zoom
 alt - d : yabai -m window --toggle zoom-parent
 alt - u : yabai -m window --toggle zoom-fullscreen

# Rotate windows clockwise and anticlockwise
alt - r         : yabai -m space --rotate 90
shift + alt - r : yabai -m space --rotate 270

# toggle window split type
 alt - v : yabai -m window --toggle split

# float / unfloat window and center on screen
 alt - f : yabai -m window --toggle float;\
           yabai -m window --grid 4:4:1:1:2:2

# restart
shift + lctrl + alt - r : \
    /usr/bin/env osascript <<< \
        'display notification "Restarting yabai" with title "yabai"'; \
    brew services restart yabai; \
    brew services restart skhd
